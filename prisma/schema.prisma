// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  role    Role?    @default(USER)
  profile Profile?
  posts   Post[]
}

enum Role {
  ADMIN
  USER
}

model Profile {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  bio    String
  user   User   @relation(fields: [userId], references: [id])
}

model Post {
  id         Int        @id @default(autoincrement())
  authorId   Int
  title      String
  likeNum    Int        @default(0)
  createdAt  DateTime   @default(now())
  updateAt   DateTime   @updatedAt
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  categories Category[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

// model User {
//   firstName String
//   lastName  String
//   profile   Profile?

//   @@id([firstName, lastName])
// }

// model Profile {
//   id            Int    @id
//   userFirstName String
//   userLastName  String
//   user          User   @relation(fields: [userFirstName, userLastName], references: [firstName, lastName])

//   @@unique([userFirstName, userLastName])
// }
